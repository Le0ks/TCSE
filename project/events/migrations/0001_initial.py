# Generated by Django 4.2 on 2023-05-15 16:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.CharField(max_length=150, verbose_name="ответ")),
                (
                    "is_correct",
                    models.BooleanField(
                        default=False, verbose_name="правильный ли ответ"
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True, null=True, verbose_name="комментарий к ответы"
                    ),
                ),
            ],
            options={
                "verbose_name": "ответ",
                "verbose_name_plural": "ответы",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="категория")),
                ("description", models.TextField(verbose_name="описание")),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="опубликован"),
                ),
                ("slug", models.SlugField(null=True, unique=True, verbose_name="url")),
            ],
            options={
                "verbose_name": "категория",
                "verbose_name_plural": "категории",
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=150, verbose_name="название мероприятия"
                    ),
                ),
                ("slug", models.SlugField(null=True, unique=True, verbose_name="слаг")),
                ("description", models.TextField(verbose_name="описание мероприятия")),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="опубликовано"),
                ),
                (
                    "start_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="время начала мероприятия"
                    ),
                ),
                (
                    "finish_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="время конца мероприятия"
                    ),
                ),
                (
                    "is_private",
                    models.BooleanField(
                        default=False, verbose_name="закрытое мероприятие"
                    ),
                ),
                (
                    "is_ended",
                    models.BooleanField(
                        default=False, verbose_name="подведены ли итоги"
                    ),
                ),
                (
                    "answer_rule",
                    models.IntegerField(
                        choices=[
                            (0, "Моментальный вывод правильных ответов"),
                            (1, "Секретные правильные ответы"),
                            (
                                2,
                                "Вывод правильных ответов после прохождения мероприятия",
                            ),
                        ],
                        default=0,
                        verbose_name="виды мероприятий в зависимости от типа вывода правильного ответа",
                    ),
                ),
                (
                    "type_by_time",
                    models.IntegerField(
                        choices=[
                            (0, "Мероприятия без ограничений по времени"),
                            (
                                1,
                                "Мероприятия только с ограничением по времени его прохождения",
                            ),
                            (2, "Мероприятия с началом и концом"),
                            (
                                3,
                                "Мероприятия с началом и концом и с ограничением по времени его прохождения",
                            ),
                        ],
                        default=0,
                        verbose_name="выбор типа времени мероприятия",
                    ),
                ),
                (
                    "duration",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Укажите продолжительность мероприятия в минутах",
                        null=True,
                        verbose_name="продолжительность",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        help_text="Организатор мероприятия",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_author",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="автор",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="events.category",
                        verbose_name="категория",
                    ),
                ),
            ],
            options={
                "verbose_name": "мероприятие",
                "verbose_name_plural": "мероприятия",
                "ordering": ("category",),
            },
        ),
        migrations.CreateModel(
            name="UserAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_correct", models.BooleanField(verbose_name="правильность ответа")),
                (
                    "answer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="events.answer"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="пользователь, который дал ответ",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_answers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "ответы пользователя",
            },
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(verbose_name="текст задания")),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_task",
                        to="events.event",
                        verbose_name="мероприятие",
                    ),
                ),
            ],
            options={
                "verbose_name": "задание",
                "verbose_name_plural": "задания",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Введите имя тега",
                        max_length=150,
                        verbose_name="имя тега",
                    ),
                ),
                (
                    "is_published",
                    models.BooleanField(
                        default=False,
                        help_text="Опубликован тег или нет",
                        verbose_name="опубликован",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_tags",
                        to="events.task",
                        verbose_name="тэги задания",
                    ),
                ),
            ],
            options={
                "verbose_name": "тэг",
                "verbose_name_plural": "тэги",
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(verbose_name="текст поста")),
                ("is_published", models.BooleanField(verbose_name="опубликовано")),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="events.event",
                        verbose_name="пост",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventResults",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "solved",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Верно решенные задачи",
                        verbose_name="задачи",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        help_text="мероприятие, к которому относится результат",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="events.event",
                        verbose_name="мероприятие",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Пользователь, участвовавший в мероприятии",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "результат",
                "verbose_name_plural": "результаты",
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(verbose_name="текст комментария")),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="events.post",
                        verbose_name="комментарии",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="пользователь, который оставил комментарий",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_commentor",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="пользователь",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="answer",
            name="task",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="answers",
                to="events.task",
                verbose_name="задание",
            ),
        ),
    ]
